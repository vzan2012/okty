env:
    global:
        - PATH=$HOME/.local/bin:$PATH

services:
    - docker

before_install:
    - pip install --user awscli

install:
    - docker run -v $(pwd):/app -w /app node:11-stretch npm install

script:
    - if [ "$TRAVIS_BRANCH" == "master" ]; then docker run -v $(pwd):/app -w /app node:11-stretch ./node_modules/.bin/ng build --prod --aot; fi
    - if [ "$TRAVIS_BRANCH" == "dev" ]; then docker run -v $(pwd):/app -w /app node:11-stretch ./node_modules/.bin/ng build --configuration=develop; fi

after_script:
    - if [ "$TRAVIS_PULL_REQUEST" = "false" ]; then docker run -v $(pwd):/usr/src newtmitch/sonar-scanner  -Dsonar.projectBaseDir=/usr/src -Dsonar.login=$SONAR_TOKEN; fi
    - rm -rf .scannerwork

deploy:
    -   provider: script
        skip_cleanup: true
        script: aws s3 sync --region=eu-west-3 --delete --acl public-read dist/okty s3://okty
        on:
            repo: Okty-io/okty
            branch: master
    -   provider: script
        skip_cleanup: true
        script: aws s3 sync --region=eu-west-3 --delete --acl public-read dist/okty s3://okty-dev
        on:
            repo: Okty-io/okty
            branch: dev

after_deploy:
    - if [ "$TRAVIS_BRANCH" == "master" ]; then aws cloudfront create-invalidation --distribution-id $CLOUDFRONT_PROD_DISTRIBUTION_ID --paths "/*"; fi
    - if [ "$TRAVIS_BRANCH" == "dev" ]; then aws cloudfront create-invalidation --distribution-id $CLOUDFRONT_DEV_DISTRIBUTION_ID --paths "/*"; fi
